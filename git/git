git常用命令：

创建git仓库
mkdir <name>
git init

把文件添加到仓库
git add <filename>
把文件提交到仓库
git commit - m "提交日志"

查看工作区状态
git status
查看修改内容
git diff

查看版本提交历史
git log
显示从最近到最远的提交日志
    参数：--pertty=oneline
版本号：commit_id

git中head表示当前版本，上一个版本是head^，上上个版本是head^^，往上100个版本是head~100

head指向的版本就是当前版本，在历史版本中穿梭使用命令git reset --hard commit_id

查看命令历史
git reflog

丢弃工作区的修改
git checkout --file

丢弃暂存区的修改
git reset HEAD file
git checkout --file

删除一个文件
git rm <name>

移动或更名
git mv file_from file_to

关联远程仓库
git remote add origin git@server_name:path/repo-name.git

从运程仓库克隆
git clone git@server_name:path/repo-name.git

使用命令第一次推送master分支的所有内容
git push -u origin master
推送最新修改
git push origin master


查看分支：git branch
创建分支：git branch <name>
切换分支：git checkout <name>
创建+切换分支：git checkout -b <name>
合并某分支到当前分支,快速模式：git merge <name>
删除分支：git branch -d <name>

查看分支合并图
git log --graph

分支合并模式，普通模式，不删除原有分支
git merge --no-ff -m "合并日志" <name>


bug分支
将当前工作“储藏”起来，等以后恢复后继续工作
git stash
查看当前储藏的工作
git stash list
恢复工作方式一
    git stash apply
    再删除
    git stash drop
恢复工作方式二
    git stash pop


查看远程库信息
git remote
git remote -v

推送到远程分支
git push origin master
git push origin dev


在本地创建和远程分支对应的分支
git checkout -b branch-name origin/branch-name

抓取分支
git pull

建立本地分支和远程分支的关联
git branch --set-upstream branch-name origin/branch-name









